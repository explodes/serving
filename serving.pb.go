// Code generated by protoc-gen-go. DO NOT EDIT.
// source: serving.proto

package serving

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Timestamp struct {
	Milliseconds         int64    `protobuf:"varint,1,opt,name=milliseconds,proto3" json:"milliseconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f5a8b3d85f9ee03, []int{0}
}

func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (m *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(m, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetMilliseconds() int64 {
	if m != nil {
		return m.Milliseconds
	}
	return 0
}

type BindAddress struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BindAddress) Reset()         { *m = BindAddress{} }
func (m *BindAddress) String() string { return proto.CompactTextString(m) }
func (*BindAddress) ProtoMessage()    {}
func (*BindAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f5a8b3d85f9ee03, []int{1}
}

func (m *BindAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BindAddress.Unmarshal(m, b)
}
func (m *BindAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BindAddress.Marshal(b, m, deterministic)
}
func (m *BindAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BindAddress.Merge(m, src)
}
func (m *BindAddress) XXX_Size() int {
	return xxx_messageInfo_BindAddress.Size(m)
}
func (m *BindAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_BindAddress.DiscardUnknown(m)
}

var xxx_messageInfo_BindAddress proto.InternalMessageInfo

func (m *BindAddress) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *BindAddress) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func init() {
	proto.RegisterType((*Timestamp)(nil), "serving.Timestamp")
	proto.RegisterType((*BindAddress)(nil), "serving.BindAddress")
}

func init() { proto.RegisterFile("serving.proto", fileDescriptor_3f5a8b3d85f9ee03) }

var fileDescriptor_3f5a8b3d85f9ee03 = []byte{
	// 156 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0xcc, 0x4b, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0xf4, 0xb9,
	0x38, 0x43, 0x32, 0x73, 0x53, 0x8b, 0x4b, 0x12, 0x73, 0x0b, 0x84, 0x94, 0xb8, 0x78, 0x72, 0x33,
	0x73, 0x72, 0x32, 0x8b, 0x53, 0x93, 0xf3, 0xf3, 0x52, 0x8a, 0x25, 0x18, 0x15, 0x18, 0x35, 0x98,
	0x83, 0x50, 0xc4, 0x94, 0x4c, 0xb9, 0xb8, 0x9d, 0x32, 0xf3, 0x52, 0x1c, 0x53, 0x52, 0x8a, 0x52,
	0x8b, 0x8b, 0x85, 0x84, 0xb8, 0x58, 0x32, 0xf2, 0x8b, 0x4b, 0xc0, 0x4a, 0x39, 0x83, 0xc0, 0x6c,
	0x90, 0x58, 0x41, 0x7e, 0x51, 0x89, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x6f, 0x10, 0x98, 0xed, 0x24,
	0x1b, 0x25, 0x9d, 0x9e, 0x59, 0x92, 0x51, 0x9a, 0xa4, 0x97, 0x9c, 0x9f, 0xab, 0x9f, 0x5a, 0x51,
	0x90, 0x93, 0x9f, 0x92, 0x5a, 0xac, 0x0f, 0x75, 0x46, 0x12, 0x1b, 0xd8, 0x59, 0xc6, 0x80, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xac, 0x4d, 0xaf, 0x42, 0xa7, 0x00, 0x00, 0x00,
}
