// Code generated by protoc-gen-go. DO NOT EDIT.
// source: logz/logz.proto

package logz

import (
	fmt "fmt"
	timestamp "github.com/explodes/serving/timestamp"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LogLevel int32

const (
	LogLevel_UNKNOWN LogLevel = 0
	LogLevel_DEBUG   LogLevel = 1
	LogLevel_INFO    LogLevel = 2
	LogLevel_WARN    LogLevel = 3
	LogLevel_ERROR   LogLevel = 4
)

var LogLevel_name = map[int32]string{
	0: "UNKNOWN",
	1: "DEBUG",
	2: "INFO",
	3: "WARN",
	4: "ERROR",
}

var LogLevel_value = map[string]int32{
	"UNKNOWN": 0,
	"DEBUG":   1,
	"INFO":    2,
	"WARN":    3,
	"ERROR":   4,
}

func (x LogLevel) String() string {
	return proto.EnumName(LogLevel_name, int32(x))
}

func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_623f03371c6d65cf, []int{0}
}

type LogRequest struct {
	// Process and parenting information.
	Stack *Stack `protobuf:"bytes,1,opt,name=stack,proto3" json:"stack,omitempty"`
	// Incoming logs.
	LogEntries           []*LogEntry `protobuf:"bytes,2,rep,name=log_entries,json=logEntries,proto3" json:"log_entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *LogRequest) Reset()         { *m = LogRequest{} }
func (m *LogRequest) String() string { return proto.CompactTextString(m) }
func (*LogRequest) ProtoMessage()    {}
func (*LogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_623f03371c6d65cf, []int{0}
}

func (m *LogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogRequest.Unmarshal(m, b)
}
func (m *LogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogRequest.Marshal(b, m, deterministic)
}
func (m *LogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogRequest.Merge(m, src)
}
func (m *LogRequest) XXX_Size() int {
	return xxx_messageInfo_LogRequest.Size(m)
}
func (m *LogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogRequest proto.InternalMessageInfo

func (m *LogRequest) GetStack() *Stack {
	if m != nil {
		return m.Stack
	}
	return nil
}

func (m *LogRequest) GetLogEntries() []*LogEntry {
	if m != nil {
		return m.LogEntries
	}
	return nil
}

type LogResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogResponse) Reset()         { *m = LogResponse{} }
func (m *LogResponse) String() string { return proto.CompactTextString(m) }
func (*LogResponse) ProtoMessage()    {}
func (*LogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_623f03371c6d65cf, []int{1}
}

func (m *LogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogResponse.Unmarshal(m, b)
}
func (m *LogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogResponse.Marshal(b, m, deterministic)
}
func (m *LogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogResponse.Merge(m, src)
}
func (m *LogResponse) XXX_Size() int {
	return xxx_messageInfo_LogResponse.Size(m)
}
func (m *LogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogResponse proto.InternalMessageInfo

// Stack is a way of identifying the flow of RPCs throughout a system.
type Stack struct {
	// The id of the system logging information.
	Id *ServiceId `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// The id of the parent that triggered a service.
	ParentId             *ServiceId `protobuf:"bytes,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Stack) Reset()         { *m = Stack{} }
func (m *Stack) String() string { return proto.CompactTextString(m) }
func (*Stack) ProtoMessage()    {}
func (*Stack) Descriptor() ([]byte, []int) {
	return fileDescriptor_623f03371c6d65cf, []int{2}
}

func (m *Stack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stack.Unmarshal(m, b)
}
func (m *Stack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stack.Marshal(b, m, deterministic)
}
func (m *Stack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stack.Merge(m, src)
}
func (m *Stack) XXX_Size() int {
	return xxx_messageInfo_Stack.Size(m)
}
func (m *Stack) XXX_DiscardUnknown() {
	xxx_messageInfo_Stack.DiscardUnknown(m)
}

var xxx_messageInfo_Stack proto.InternalMessageInfo

func (m *Stack) GetId() *ServiceId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Stack) GetParentId() *ServiceId {
	if m != nil {
		return m.ParentId
	}
	return nil
}

// ServiceId identifies an instance of process running a service.
type ServiceId struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Instance             string   `protobuf:"bytes,2,opt,name=instance,proto3" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceId) Reset()         { *m = ServiceId{} }
func (m *ServiceId) String() string { return proto.CompactTextString(m) }
func (*ServiceId) ProtoMessage()    {}
func (*ServiceId) Descriptor() ([]byte, []int) {
	return fileDescriptor_623f03371c6d65cf, []int{3}
}

func (m *ServiceId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceId.Unmarshal(m, b)
}
func (m *ServiceId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceId.Marshal(b, m, deterministic)
}
func (m *ServiceId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceId.Merge(m, src)
}
func (m *ServiceId) XXX_Size() int {
	return xxx_messageInfo_ServiceId.Size(m)
}
func (m *ServiceId) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceId.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceId proto.InternalMessageInfo

func (m *ServiceId) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServiceId) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

type LogEntry struct {
	// Unix timestamp in milliseconds.
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Type                 string               `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Level                LogLevel             `protobuf:"varint,3,opt,name=level,proto3,enum=serving.logz.LogLevel" json:"level,omitempty"`
	Misc                 *any.Any             `protobuf:"bytes,4,opt,name=misc,proto3" json:"misc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LogEntry) Reset()         { *m = LogEntry{} }
func (m *LogEntry) String() string { return proto.CompactTextString(m) }
func (*LogEntry) ProtoMessage()    {}
func (*LogEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_623f03371c6d65cf, []int{4}
}

func (m *LogEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogEntry.Unmarshal(m, b)
}
func (m *LogEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogEntry.Marshal(b, m, deterministic)
}
func (m *LogEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogEntry.Merge(m, src)
}
func (m *LogEntry) XXX_Size() int {
	return xxx_messageInfo_LogEntry.Size(m)
}
func (m *LogEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_LogEntry.DiscardUnknown(m)
}

var xxx_messageInfo_LogEntry proto.InternalMessageInfo

func (m *LogEntry) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *LogEntry) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *LogEntry) GetLevel() LogLevel {
	if m != nil {
		return m.Level
	}
	return LogLevel_UNKNOWN
}

func (m *LogEntry) GetMisc() *any.Any {
	if m != nil {
		return m.Misc
	}
	return nil
}

func init() {
	proto.RegisterEnum("serving.logz.LogLevel", LogLevel_name, LogLevel_value)
	proto.RegisterType((*LogRequest)(nil), "serving.logz.LogRequest")
	proto.RegisterType((*LogResponse)(nil), "serving.logz.LogResponse")
	proto.RegisterType((*Stack)(nil), "serving.logz.Stack")
	proto.RegisterType((*ServiceId)(nil), "serving.logz.ServiceId")
	proto.RegisterType((*LogEntry)(nil), "serving.logz.LogEntry")
}

func init() { proto.RegisterFile("logz/logz.proto", fileDescriptor_623f03371c6d65cf) }

var fileDescriptor_623f03371c6d65cf = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0x5d, 0x8b, 0xd3, 0x40,
	0x14, 0xdd, 0xa6, 0xa9, 0x36, 0x37, 0x7e, 0x84, 0x51, 0x34, 0xdb, 0xa7, 0x12, 0x10, 0xab, 0x48,
	0x02, 0x55, 0xf4, 0x41, 0x5f, 0xba, 0x58, 0xa5, 0x6c, 0x49, 0x61, 0x74, 0x59, 0xf0, 0xa5, 0xa4,
	0xc9, 0xec, 0xec, 0x60, 0x32, 0x13, 0x33, 0xd3, 0xc5, 0xec, 0x8f, 0xf2, 0x37, 0x4a, 0x6e, 0xd2,
	0xf8, 0xb5, 0xf8, 0x12, 0x4e, 0xe6, 0x9c, 0x3b, 0xe7, 0xde, 0x73, 0x07, 0xee, 0xe7, 0x8a, 0x5f,
	0x47, 0xcd, 0x27, 0x2c, 0x2b, 0x65, 0x14, 0xb9, 0xa3, 0x59, 0x75, 0x25, 0x24, 0x0f, 0x9b, 0xb3,
	0xc9, 0x13, 0x73, 0x29, 0xaa, 0x6c, 0x5b, 0x26, 0x95, 0xa9, 0x23, 0xae, 0x14, 0xcf, 0x59, 0x84,
	0xba, 0xdd, 0xfe, 0x22, 0x4a, 0x64, 0xdd, 0x16, 0x4d, 0x8e, 0x8d, 0x28, 0x98, 0x36, 0x49, 0x51,
	0x46, 0x3d, 0x6a, 0xa9, 0xa0, 0x04, 0x58, 0x2b, 0x4e, 0xd9, 0xb7, 0x3d, 0xd3, 0x86, 0x3c, 0x83,
	0x91, 0x36, 0x49, 0xfa, 0xd5, 0x1f, 0x4c, 0x07, 0x33, 0x77, 0xfe, 0x20, 0xfc, 0xdd, 0x2d, 0xfc,
	0xd4, 0x50, 0xb4, 0x55, 0x90, 0x37, 0xe0, 0xe6, 0x8a, 0x6f, 0x99, 0x34, 0x95, 0x60, 0xda, 0xb7,
	0xa6, 0xc3, 0x99, 0x3b, 0x7f, 0xf4, 0x67, 0xc1, 0x5a, 0xf1, 0xa5, 0x34, 0x55, 0x4d, 0x21, 0x6f,
	0x91, 0x60, 0x3a, 0xb8, 0x0b, 0x2e, 0x3a, 0xea, 0x52, 0x49, 0xcd, 0x82, 0x0b, 0x18, 0xe1, 0xbd,
	0xe4, 0x29, 0x58, 0x22, 0xf3, 0x2d, 0x34, 0x7e, 0xfc, 0x97, 0x71, 0xf3, 0x93, 0xb2, 0x55, 0x46,
	0x2d, 0x91, 0x91, 0x57, 0xe0, 0x94, 0x49, 0xc5, 0xa4, 0xd9, 0x8a, 0xcc, 0x1f, 0xfe, 0x5f, 0x3f,
	0x6e, 0x95, 0xab, 0x2c, 0x78, 0x0b, 0x4e, 0x7f, 0x4c, 0x08, 0xd8, 0x32, 0x29, 0x18, 0x8e, 0xe9,
	0x50, 0xc4, 0x64, 0x02, 0x63, 0x21, 0xb5, 0x49, 0x64, 0xca, 0xb0, 0x0b, 0x87, 0xf6, 0xff, 0xc1,
	0x8f, 0x01, 0x8c, 0x0f, 0xc3, 0x90, 0xd7, 0xe0, 0xf4, 0x29, 0x76, 0x41, 0xf9, 0xbd, 0x3f, 0xa6,
	0x1a, 0x7e, 0x3e, 0xf0, 0xf4, 0x97, 0xb4, 0x31, 0x35, 0x75, 0x79, 0xb8, 0x1c, 0x31, 0x79, 0x01,
	0xa3, 0x9c, 0x5d, 0xb1, 0x1c, 0xe7, 0xb8, 0x77, 0x43, 0x7e, 0xeb, 0x86, 0xa5, 0xad, 0x88, 0xcc,
	0xc0, 0x2e, 0x84, 0x4e, 0x7d, 0x1b, 0x4d, 0x1f, 0x86, 0xed, 0xc6, 0xc3, 0xc3, 0xc6, 0xc3, 0x85,
	0xac, 0x29, 0x2a, 0x9e, 0x2f, 0xb0, 0x5f, 0x2c, 0x26, 0x2e, 0xdc, 0x3e, 0x8b, 0x4f, 0xe3, 0xcd,
	0x79, 0xec, 0x1d, 0x11, 0x07, 0x46, 0xef, 0x97, 0x27, 0x67, 0x1f, 0xbd, 0x01, 0x19, 0x83, 0xbd,
	0x8a, 0x3f, 0x6c, 0x3c, 0xab, 0x41, 0xe7, 0x0b, 0x1a, 0x7b, 0xc3, 0x86, 0x5e, 0x52, 0xba, 0xa1,
	0x9e, 0x3d, 0x3f, 0xc5, 0x3d, 0x5d, 0x77, 0xa1, 0x91, 0x77, 0x30, 0x5c, 0x2b, 0x4e, 0xfc, 0x7f,
	0x3a, 0xec, 0xde, 0xce, 0xe4, 0xf8, 0x06, 0xa6, 0xdb, 0xf1, 0xd1, 0x49, 0xf0, 0x65, 0xca, 0x85,
	0xb9, 0xdc, 0xef, 0xc2, 0x54, 0x15, 0x11, 0xfb, 0x5e, 0xe6, 0x2a, 0x63, 0x3a, 0xea, 0x2a, 0xf0,
	0x81, 0xef, 0x6e, 0xe1, 0x1c, 0x2f, 0x7f, 0x06, 0x00, 0x00, 0xff, 0xff, 0x3a, 0xa4, 0x4a, 0xc0,
	0xf4, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LogzServiceClient is the client API for LogzService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogzServiceClient interface {
	Log(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (*LogResponse, error)
}

type logzServiceClient struct {
	cc *grpc.ClientConn
}

func NewLogzServiceClient(cc *grpc.ClientConn) LogzServiceClient {
	return &logzServiceClient{cc}
}

func (c *logzServiceClient) Log(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (*LogResponse, error) {
	out := new(LogResponse)
	err := c.cc.Invoke(ctx, "/serving.logz.LogzService/Log", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogzServiceServer is the server API for LogzService service.
type LogzServiceServer interface {
	Log(context.Context, *LogRequest) (*LogResponse, error)
}

func RegisterLogzServiceServer(s *grpc.Server, srv LogzServiceServer) {
	s.RegisterService(&_LogzService_serviceDesc, srv)
}

func _LogzService_Log_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogzServiceServer).Log(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/serving.logz.LogzService/Log",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogzServiceServer).Log(ctx, req.(*LogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LogzService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "serving.logz.LogzService",
	HandlerType: (*LogzServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Log",
			Handler:    _LogzService_Log_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logz/logz.proto",
}
