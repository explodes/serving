// Code generated by protoc-gen-go. DO NOT EDIT.
// source: expz/service.proto

package expz

import (
	fmt "fmt"
	proto1 "github.com/explodes/serving/proto"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ExpzConfig struct {
	BindAddress          *proto1.Address                    `protobuf:"bytes,1,opt,name=bind_address,json=bindAddress,proto3" json:"bind_address,omitempty"`
	JsonBindAddress      *proto1.Address                    `protobuf:"bytes,2,opt,name=json_bind_address,json=jsonBindAddress,proto3" json:"json_bind_address,omitempty"`
	LogzServer           *proto1.GrpcServer                 `protobuf:"bytes,3,opt,name=logz_server,json=logzServer,proto3" json:"logz_server,omitempty"`
	DefaultFeatures      []*FeatureDeclaration              `protobuf:"bytes,4,rep,name=default_features,json=defaultFeatures,proto3" json:"default_features,omitempty"`
	ExperimentalFeatures []*ExpzConfig_ExperimentalFeatures `protobuf:"bytes,5,rep,name=experimental_features,json=experimentalFeatures,proto3" json:"experimental_features,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ExpzConfig) Reset()         { *m = ExpzConfig{} }
func (m *ExpzConfig) String() string { return proto.CompactTextString(m) }
func (*ExpzConfig) ProtoMessage()    {}
func (*ExpzConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfab7f94f2819cc9, []int{0}
}

func (m *ExpzConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpzConfig.Unmarshal(m, b)
}
func (m *ExpzConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpzConfig.Marshal(b, m, deterministic)
}
func (m *ExpzConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpzConfig.Merge(m, src)
}
func (m *ExpzConfig) XXX_Size() int {
	return xxx_messageInfo_ExpzConfig.Size(m)
}
func (m *ExpzConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpzConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ExpzConfig proto.InternalMessageInfo

func (m *ExpzConfig) GetBindAddress() *proto1.Address {
	if m != nil {
		return m.BindAddress
	}
	return nil
}

func (m *ExpzConfig) GetJsonBindAddress() *proto1.Address {
	if m != nil {
		return m.JsonBindAddress
	}
	return nil
}

func (m *ExpzConfig) GetLogzServer() *proto1.GrpcServer {
	if m != nil {
		return m.LogzServer
	}
	return nil
}

func (m *ExpzConfig) GetDefaultFeatures() []*FeatureDeclaration {
	if m != nil {
		return m.DefaultFeatures
	}
	return nil
}

func (m *ExpzConfig) GetExperimentalFeatures() []*ExpzConfig_ExperimentalFeatures {
	if m != nil {
		return m.ExperimentalFeatures
	}
	return nil
}

type ExpzConfig_ExperimentalFeatures struct {
	Name                 string                                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Doc                  string                                `protobuf:"bytes,2,opt,name=doc,proto3" json:"doc,omitempty"`
	Mods                 *ExpzConfig_ExperimentalFeatures_Mods `protobuf:"bytes,3,opt,name=mods,proto3" json:"mods,omitempty"`
	Features             *Features                             `protobuf:"bytes,4,opt,name=features,proto3" json:"features,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *ExpzConfig_ExperimentalFeatures) Reset()         { *m = ExpzConfig_ExperimentalFeatures{} }
func (m *ExpzConfig_ExperimentalFeatures) String() string { return proto.CompactTextString(m) }
func (*ExpzConfig_ExperimentalFeatures) ProtoMessage()    {}
func (*ExpzConfig_ExperimentalFeatures) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfab7f94f2819cc9, []int{0, 0}
}

func (m *ExpzConfig_ExperimentalFeatures) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpzConfig_ExperimentalFeatures.Unmarshal(m, b)
}
func (m *ExpzConfig_ExperimentalFeatures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpzConfig_ExperimentalFeatures.Marshal(b, m, deterministic)
}
func (m *ExpzConfig_ExperimentalFeatures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpzConfig_ExperimentalFeatures.Merge(m, src)
}
func (m *ExpzConfig_ExperimentalFeatures) XXX_Size() int {
	return xxx_messageInfo_ExpzConfig_ExperimentalFeatures.Size(m)
}
func (m *ExpzConfig_ExperimentalFeatures) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpzConfig_ExperimentalFeatures.DiscardUnknown(m)
}

var xxx_messageInfo_ExpzConfig_ExperimentalFeatures proto.InternalMessageInfo

func (m *ExpzConfig_ExperimentalFeatures) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ExpzConfig_ExperimentalFeatures) GetDoc() string {
	if m != nil {
		return m.Doc
	}
	return ""
}

func (m *ExpzConfig_ExperimentalFeatures) GetMods() *ExpzConfig_ExperimentalFeatures_Mods {
	if m != nil {
		return m.Mods
	}
	return nil
}

func (m *ExpzConfig_ExperimentalFeatures) GetFeatures() *Features {
	if m != nil {
		return m.Features
	}
	return nil
}

// A range within [0, 999] representing which mods should receive the feature set.
type ExpzConfig_ExperimentalFeatures_Mods struct {
	Min                  uint32   `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max                  uint32   `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExpzConfig_ExperimentalFeatures_Mods) Reset()         { *m = ExpzConfig_ExperimentalFeatures_Mods{} }
func (m *ExpzConfig_ExperimentalFeatures_Mods) String() string { return proto.CompactTextString(m) }
func (*ExpzConfig_ExperimentalFeatures_Mods) ProtoMessage()    {}
func (*ExpzConfig_ExperimentalFeatures_Mods) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfab7f94f2819cc9, []int{0, 0, 0}
}

func (m *ExpzConfig_ExperimentalFeatures_Mods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpzConfig_ExperimentalFeatures_Mods.Unmarshal(m, b)
}
func (m *ExpzConfig_ExperimentalFeatures_Mods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpzConfig_ExperimentalFeatures_Mods.Marshal(b, m, deterministic)
}
func (m *ExpzConfig_ExperimentalFeatures_Mods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpzConfig_ExperimentalFeatures_Mods.Merge(m, src)
}
func (m *ExpzConfig_ExperimentalFeatures_Mods) XXX_Size() int {
	return xxx_messageInfo_ExpzConfig_ExperimentalFeatures_Mods.Size(m)
}
func (m *ExpzConfig_ExperimentalFeatures_Mods) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpzConfig_ExperimentalFeatures_Mods.DiscardUnknown(m)
}

var xxx_messageInfo_ExpzConfig_ExperimentalFeatures_Mods proto.InternalMessageInfo

func (m *ExpzConfig_ExperimentalFeatures_Mods) GetMin() uint32 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *ExpzConfig_ExperimentalFeatures_Mods) GetMax() uint32 {
	if m != nil {
		return m.Max
	}
	return 0
}

type GetExperimentsRequest struct {
	Cookie               string   `protobuf:"bytes,1,opt,name=cookie,proto3" json:"cookie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetExperimentsRequest) Reset()         { *m = GetExperimentsRequest{} }
func (m *GetExperimentsRequest) String() string { return proto.CompactTextString(m) }
func (*GetExperimentsRequest) ProtoMessage()    {}
func (*GetExperimentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfab7f94f2819cc9, []int{1}
}

func (m *GetExperimentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetExperimentsRequest.Unmarshal(m, b)
}
func (m *GetExperimentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetExperimentsRequest.Marshal(b, m, deterministic)
}
func (m *GetExperimentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetExperimentsRequest.Merge(m, src)
}
func (m *GetExperimentsRequest) XXX_Size() int {
	return xxx_messageInfo_GetExperimentsRequest.Size(m)
}
func (m *GetExperimentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetExperimentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetExperimentsRequest proto.InternalMessageInfo

func (m *GetExperimentsRequest) GetCookie() string {
	if m != nil {
		return m.Cookie
	}
	return ""
}

type GetExperimentsResponse struct {
	Features             *Features `protobuf:"bytes,1,opt,name=features,proto3" json:"features,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetExperimentsResponse) Reset()         { *m = GetExperimentsResponse{} }
func (m *GetExperimentsResponse) String() string { return proto.CompactTextString(m) }
func (*GetExperimentsResponse) ProtoMessage()    {}
func (*GetExperimentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfab7f94f2819cc9, []int{2}
}

func (m *GetExperimentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetExperimentsResponse.Unmarshal(m, b)
}
func (m *GetExperimentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetExperimentsResponse.Marshal(b, m, deterministic)
}
func (m *GetExperimentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetExperimentsResponse.Merge(m, src)
}
func (m *GetExperimentsResponse) XXX_Size() int {
	return xxx_messageInfo_GetExperimentsResponse.Size(m)
}
func (m *GetExperimentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetExperimentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetExperimentsResponse proto.InternalMessageInfo

func (m *GetExperimentsResponse) GetFeatures() *Features {
	if m != nil {
		return m.Features
	}
	return nil
}

func init() {
	proto.RegisterType((*ExpzConfig)(nil), "expz.ExpzConfig")
	proto.RegisterType((*ExpzConfig_ExperimentalFeatures)(nil), "expz.ExpzConfig.ExperimentalFeatures")
	proto.RegisterType((*ExpzConfig_ExperimentalFeatures_Mods)(nil), "expz.ExpzConfig.ExperimentalFeatures.Mods")
	proto.RegisterType((*GetExperimentsRequest)(nil), "expz.GetExperimentsRequest")
	proto.RegisterType((*GetExperimentsResponse)(nil), "expz.GetExperimentsResponse")
}

func init() { proto.RegisterFile("expz/service.proto", fileDescriptor_bfab7f94f2819cc9) }

var fileDescriptor_bfab7f94f2819cc9 = []byte{
	// 466 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x25, 0xc4, 0x54, 0x74, 0x02, 0x4d, 0xd8, 0xb4, 0xc8, 0x18, 0x0e, 0x91, 0x25, 0xa4, 0x2a,
	0x48, 0x8e, 0x94, 0x72, 0x44, 0x48, 0x24, 0x81, 0x9e, 0x7a, 0xd9, 0xde, 0x2a, 0xa4, 0x68, 0x63,
	0x4f, 0xc2, 0x82, 0xed, 0x35, 0xbb, 0x0e, 0xb2, 0x72, 0xe4, 0x7f, 0x38, 0xf2, 0x27, 0x7c, 0x10,
	0xda, 0xd9, 0x25, 0x69, 0x50, 0x40, 0xbd, 0xd8, 0xe3, 0x37, 0xf3, 0xde, 0xbe, 0x7d, 0xd6, 0x00,
	0xc3, 0xa6, 0xda, 0x8c, 0x0c, 0xea, 0x6f, 0x32, 0xc5, 0xa4, 0xd2, 0xaa, 0x56, 0x2c, 0xb0, 0x58,
	0xd4, 0xa5, 0x8e, 0x7d, 0x38, 0x38, 0xea, 0xd3, 0x6b, 0x24, 0xb2, 0x4c, 0xa3, 0x31, 0x1e, 0x7c,
	0xe6, 0x40, 0x83, 0x5a, 0x8a, 0x5c, 0x6e, 0x44, 0x2d, 0x55, 0xe9, 0x5a, 0xf1, 0x8f, 0x00, 0xe0,
	0x7d, 0x53, 0x6d, 0xa6, 0xaa, 0x5c, 0xca, 0x15, 0xbb, 0x80, 0x47, 0x0b, 0x59, 0x66, 0x73, 0xcf,
	0x0f, 0x5b, 0x83, 0xd6, 0x79, 0x67, 0xdc, 0x4b, 0xe8, 0xec, 0x72, 0x95, 0xbc, 0x73, 0x38, 0xef,
	0xd8, 0x29, 0xff, 0xc1, 0xde, 0xc0, 0x93, 0xcf, 0x46, 0x95, 0xf3, 0x3d, 0xe6, 0xfd, 0x7f, 0x30,
	0xbb, 0x76, 0x74, 0x72, 0x8b, 0xfd, 0x1a, 0x3a, 0xb9, 0x5a, 0x6d, 0xe6, 0x76, 0x10, 0x75, 0xd8,
	0x26, 0x5e, 0x7f, 0xcb, 0xbb, 0xd4, 0x55, 0x7a, 0x4d, 0x2d, 0x0e, 0x76, 0xce, 0xd5, 0x6c, 0x0a,
	0xbd, 0x0c, 0x97, 0x62, 0x9d, 0xd7, 0xf3, 0x25, 0x8a, 0x7a, 0xad, 0xd1, 0x84, 0xc1, 0xa0, 0x7d,
	0xde, 0x19, 0x87, 0x09, 0xc5, 0xf1, 0xc1, 0xa1, 0x33, 0x4c, 0x73, 0xa1, 0xe9, 0xc6, 0xbc, 0xeb,
	0x19, 0xbe, 0x65, 0xd8, 0x0d, 0x9c, 0x61, 0x53, 0xa1, 0x96, 0x05, 0x96, 0xb5, 0xc8, 0x77, 0x4a,
	0x0f, 0x48, 0xe9, 0xa5, 0x53, 0xda, 0xc5, 0x63, 0xcb, 0xed, 0xf4, 0x1f, 0x15, 0x7e, 0x8a, 0x07,
	0xd0, 0xe8, 0x57, 0x0b, 0x4e, 0x0f, 0x8d, 0x33, 0x06, 0x41, 0x29, 0x0a, 0xa4, 0x68, 0x8f, 0x39,
	0xd5, 0xac, 0x07, 0xed, 0x4c, 0xa5, 0x94, 0xd9, 0x31, 0xb7, 0x25, 0x7b, 0x0b, 0x41, 0xa1, 0x32,
	0xe3, 0xe3, 0x18, 0xde, 0xc9, 0x49, 0x72, 0xa5, 0x32, 0xc3, 0x89, 0xc7, 0x86, 0xf0, 0xf0, 0x56,
	0x2e, 0x56, 0xe3, 0x64, 0x2f, 0x17, 0xc3, 0xb7, 0xfd, 0x68, 0x08, 0x81, 0x65, 0x5a, 0x17, 0x85,
	0x2c, 0xc9, 0xd8, 0x63, 0x6e, 0x4b, 0x42, 0x44, 0x43, 0xbe, 0x2c, 0x22, 0x9a, 0x78, 0x06, 0x67,
	0x97, 0x58, 0xef, 0x4e, 0x37, 0x1c, 0xbf, 0xae, 0xd1, 0xd4, 0xec, 0x15, 0x1c, 0xa5, 0x4a, 0x7d,
	0x91, 0xfe, 0x62, 0x93, 0xfe, 0xf7, 0x9f, 0x61, 0x77, 0xfb, 0x17, 0xa7, 0xd4, 0xe2, 0x7e, 0x24,
	0x9e, 0xc1, 0xd3, 0xbf, 0x55, 0x4c, 0xa5, 0x4a, 0x83, 0x7b, 0xbe, 0x5b, 0xff, 0xf7, 0x3d, 0xfe,
	0x08, 0x1d, 0x9b, 0xc8, 0xb5, 0xdb, 0x0b, 0x76, 0x05, 0x27, 0xfb, 0xa2, 0xec, 0xb9, 0xa3, 0x1e,
	0x34, 0x1c, 0xbd, 0x38, 0xdc, 0x74, 0x3e, 0xe2, 0x7b, 0x93, 0xf8, 0x66, 0xb0, 0x92, 0xf5, 0xa7,
	0xf5, 0x22, 0x49, 0x55, 0x61, 0x57, 0x2c, 0x57, 0x19, 0x9a, 0x91, 0xbf, 0x11, 0xed, 0xdc, 0xe2,
	0x88, 0x96, 0xe8, 0xe2, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x61, 0x55, 0xc1, 0xfb, 0xa1, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExpzServiceClient is the client API for ExpzService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExpzServiceClient interface {
	GetExperiments(ctx context.Context, in *GetExperimentsRequest, opts ...grpc.CallOption) (*GetExperimentsResponse, error)
}

type expzServiceClient struct {
	cc *grpc.ClientConn
}

func NewExpzServiceClient(cc *grpc.ClientConn) ExpzServiceClient {
	return &expzServiceClient{cc}
}

func (c *expzServiceClient) GetExperiments(ctx context.Context, in *GetExperimentsRequest, opts ...grpc.CallOption) (*GetExperimentsResponse, error) {
	out := new(GetExperimentsResponse)
	err := c.cc.Invoke(ctx, "/expz.ExpzService/GetExperiments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExpzServiceServer is the server API for ExpzService service.
type ExpzServiceServer interface {
	GetExperiments(context.Context, *GetExperimentsRequest) (*GetExperimentsResponse, error)
}

func RegisterExpzServiceServer(s *grpc.Server, srv ExpzServiceServer) {
	s.RegisterService(&_ExpzService_serviceDesc, srv)
}

func _ExpzService_GetExperiments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetExperimentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExpzServiceServer).GetExperiments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/expz.ExpzService/GetExperiments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExpzServiceServer).GetExperiments(ctx, req.(*GetExperimentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExpzService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "expz.ExpzService",
	HandlerType: (*ExpzServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetExperiments",
			Handler:    _ExpzService_GetExperiments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "expz/service.proto",
}
