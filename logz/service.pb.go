// Code generated by protoc-gen-go. DO NOT EDIT.
// source: logz/service.proto

package logz

import (
	fmt "fmt"
	proto1 "github.com/explodes/serving/proto"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ServiceConfig struct {
	BindAddress          *proto1.Address `protobuf:"bytes,1,opt,name=bind_address,json=bindAddress,proto3" json:"bind_address,omitempty"`
	JsonBindAddress      *proto1.Address `protobuf:"bytes,2,opt,name=json_bind_address,json=jsonBindAddress,proto3" json:"json_bind_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ServiceConfig) Reset()         { *m = ServiceConfig{} }
func (m *ServiceConfig) String() string { return proto.CompactTextString(m) }
func (*ServiceConfig) ProtoMessage()    {}
func (*ServiceConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_bef5d4fdd9f1c360, []int{0}
}

func (m *ServiceConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceConfig.Unmarshal(m, b)
}
func (m *ServiceConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceConfig.Marshal(b, m, deterministic)
}
func (m *ServiceConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceConfig.Merge(m, src)
}
func (m *ServiceConfig) XXX_Size() int {
	return xxx_messageInfo_ServiceConfig.Size(m)
}
func (m *ServiceConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceConfig proto.InternalMessageInfo

func (m *ServiceConfig) GetBindAddress() *proto1.Address {
	if m != nil {
		return m.BindAddress
	}
	return nil
}

func (m *ServiceConfig) GetJsonBindAddress() *proto1.Address {
	if m != nil {
		return m.JsonBindAddress
	}
	return nil
}

type RecordRequest struct {
	Cookie               string   `protobuf:"bytes,1,opt,name=cookie,proto3" json:"cookie,omitempty"`
	Stack                *Frame   `protobuf:"bytes,2,opt,name=stack,proto3" json:"stack,omitempty"`
	Entries              []*Entry `protobuf:"bytes,3,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecordRequest) Reset()         { *m = RecordRequest{} }
func (m *RecordRequest) String() string { return proto.CompactTextString(m) }
func (*RecordRequest) ProtoMessage()    {}
func (*RecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bef5d4fdd9f1c360, []int{1}
}

func (m *RecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordRequest.Unmarshal(m, b)
}
func (m *RecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordRequest.Marshal(b, m, deterministic)
}
func (m *RecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordRequest.Merge(m, src)
}
func (m *RecordRequest) XXX_Size() int {
	return xxx_messageInfo_RecordRequest.Size(m)
}
func (m *RecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecordRequest proto.InternalMessageInfo

func (m *RecordRequest) GetCookie() string {
	if m != nil {
		return m.Cookie
	}
	return ""
}

func (m *RecordRequest) GetStack() *Frame {
	if m != nil {
		return m.Stack
	}
	return nil
}

func (m *RecordRequest) GetEntries() []*Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type RecordResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecordResponse) Reset()         { *m = RecordResponse{} }
func (m *RecordResponse) String() string { return proto.CompactTextString(m) }
func (*RecordResponse) ProtoMessage()    {}
func (*RecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bef5d4fdd9f1c360, []int{2}
}

func (m *RecordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordResponse.Unmarshal(m, b)
}
func (m *RecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordResponse.Marshal(b, m, deterministic)
}
func (m *RecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordResponse.Merge(m, src)
}
func (m *RecordResponse) XXX_Size() int {
	return xxx_messageInfo_RecordResponse.Size(m)
}
func (m *RecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecordResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ServiceConfig)(nil), "logz.ServiceConfig")
	proto.RegisterType((*RecordRequest)(nil), "logz.RecordRequest")
	proto.RegisterType((*RecordResponse)(nil), "logz.RecordResponse")
}

func init() { proto.RegisterFile("logz/service.proto", fileDescriptor_bef5d4fdd9f1c360) }

var fileDescriptor_bef5d4fdd9f1c360 = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x51, 0x3d, 0x4f, 0xc3, 0x30,
	0x10, 0x25, 0x14, 0x8a, 0x70, 0x28, 0x2d, 0x2e, 0x43, 0xe9, 0x54, 0x22, 0x21, 0x21, 0x21, 0x25,
	0x52, 0x2b, 0x36, 0x16, 0x5a, 0x60, 0x62, 0x32, 0x1b, 0x4b, 0x95, 0x8f, 0x23, 0x98, 0xa6, 0xbe,
	0x60, 0xbb, 0x08, 0x32, 0x76, 0xe0, 0x1f, 0xf1, 0xff, 0x50, 0x6c, 0x97, 0x2a, 0x03, 0x8b, 0x2d,
	0xbf, 0xf7, 0xee, 0xbd, 0xf3, 0x1d, 0xa1, 0x05, 0xe6, 0x55, 0xa4, 0x40, 0x7e, 0xf0, 0x14, 0xc2,
	0x52, 0xa2, 0x46, 0xba, 0x57, 0x63, 0xc3, 0xae, 0x61, 0xea, 0xc3, 0xc2, 0xc3, 0xbe, 0xb9, 0xa2,
	0x38, 0xcb, 0x24, 0x28, 0xe5, 0xc0, 0x33, 0x0b, 0x2a, 0x90, 0x3c, 0x2e, 0x78, 0x15, 0x6b, 0x8e,
	0xc2, 0x52, 0xc1, 0xda, 0x23, 0x9d, 0x27, 0x6b, 0x3c, 0x43, 0xf1, 0xc2, 0x73, 0x3a, 0x21, 0x47,
	0x09, 0x17, 0xd9, 0xdc, 0x59, 0x0c, 0xbc, 0x91, 0x77, 0xe9, 0x8f, 0x7b, 0xa1, 0x89, 0x17, 0x79,
	0x78, 0x6b, 0x71, 0xe6, 0xd7, 0x2a, 0xf7, 0xa0, 0x37, 0xe4, 0xe4, 0x4d, 0xa1, 0x98, 0x37, 0x2a,
	0x77, 0xff, 0xa9, 0xec, 0xd6, 0xd2, 0xe9, 0xb6, 0x3a, 0xf8, 0xf6, 0x48, 0x87, 0x41, 0x8a, 0x32,
	0x63, 0xf0, 0xbe, 0x02, 0xa5, 0xe9, 0x15, 0x69, 0xa7, 0x88, 0x0b, 0x0e, 0x26, 0xfe, 0x70, 0xda,
	0x5f, 0xff, 0x0c, 0xba, 0x7f, 0x46, 0x33, 0x43, 0x31, 0x27, 0xa1, 0xe7, 0x64, 0x5f, 0xe9, 0x38,
	0x5d, 0xb8, 0x40, 0x3f, 0x34, 0xf3, 0x78, 0x90, 0xf1, 0x12, 0x98, 0x65, 0xe8, 0x05, 0x39, 0x00,
	0xa1, 0x25, 0x07, 0x35, 0x68, 0x8d, 0x5a, 0x5b, 0xd1, 0xbd, 0xd0, 0xf2, 0x8b, 0x6d, 0xb8, 0xa0,
	0x47, 0x8e, 0x37, 0x7d, 0xa8, 0x12, 0x85, 0x82, 0xf1, 0x1d, 0xf1, 0x1f, 0x31, 0xaf, 0xdc, 0x88,
	0xe8, 0x35, 0x69, 0x5b, 0x01, 0xed, 0x5b, 0x83, 0x46, 0xdb, 0xc3, 0xd3, 0x26, 0x68, 0x3d, 0x82,
	0x9d, 0x69, 0xf0, 0x3c, 0xca, 0xb9, 0x7e, 0x5d, 0x25, 0x61, 0x8a, 0xcb, 0x08, 0x3e, 0xcb, 0x02,
	0x33, 0x50, 0x91, 0xfb, 0x8f, 0xd9, 0x5f, 0xd2, 0x36, 0x0b, 0x99, 0xfc, 0x06, 0x00, 0x00, 0xff,
	0xff, 0xe9, 0x1e, 0xca, 0x7f, 0xed, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LogzServiceClient is the client API for LogzService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogzServiceClient interface {
	Record(ctx context.Context, in *RecordRequest, opts ...grpc.CallOption) (*RecordResponse, error)
}

type logzServiceClient struct {
	cc *grpc.ClientConn
}

func NewLogzServiceClient(cc *grpc.ClientConn) LogzServiceClient {
	return &logzServiceClient{cc}
}

func (c *logzServiceClient) Record(ctx context.Context, in *RecordRequest, opts ...grpc.CallOption) (*RecordResponse, error) {
	out := new(RecordResponse)
	err := c.cc.Invoke(ctx, "/logz.LogzService/Record", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogzServiceServer is the server API for LogzService service.
type LogzServiceServer interface {
	Record(context.Context, *RecordRequest) (*RecordResponse, error)
}

func RegisterLogzServiceServer(s *grpc.Server, srv LogzServiceServer) {
	s.RegisterService(&_LogzService_serviceDesc, srv)
}

func _LogzService_Record_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogzServiceServer).Record(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logz.LogzService/Record",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogzServiceServer).Record(ctx, req.(*RecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LogzService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "logz.LogzService",
	HandlerType: (*LogzServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Record",
			Handler:    _LogzService_Record_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logz/service.proto",
}
